# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command
PATH="/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

# Sync the pages of the site
1 0 */1 * * flock -n ~/.syncpages.lock -c "/bin/bash -c ~/syncpages.sh"

# Clean the queue cache
0 0 */2 * * flock -n ~/.clean-queue.lock -c "/bin/bash -c ~/clean-queue.sh"

# Cachewarm Script
* * * * * flock -n ~/.full_warm.lock -c "/bin/bash -c ~/cachewarmer.sh"

# Healthcheck Script
*/15 * * * * flock -n ~/.healthcheck.lock /bin/bash -c '~/healthcheck.sh'

# Backups
0 3 * * * tar -zcf ~/backups/seosnap-cache-$(date +\%Y\%m\%d\%H\%M\%S).tar.gz ~/seosnap/cache 2>&1
0 4 * * * find ~/seosnap/cache/ -maxdepth 1 -type f -mmin +10080 -delete
0 5 * * * find ~/backups/ -type f -mtime +4 -delete

# Cleanup Docker Volumes
0 1 */2 * * flock -n ~/.cleanup.lock -c '~/docker-cleanup.sh'
